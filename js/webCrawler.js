var totalcountry = [
    "台灣", "阿富汗", "阿爾巴尼亞", "阿爾及利亞", "美屬薩摩亞", "安道爾", "安哥拉", "安地卡及巴布達", "阿根廷", "亞美尼亞", "阿魯巴", "澳大利亞", "奧地利", "亞塞拜然", "巴哈馬", "巴林", "孟加拉", "巴貝多", "白俄羅斯", "比利時", "貝里斯", "貝南", "不丹", "玻利維亞", "波士尼亞赫塞哥維納", "波札那", "巴西", "英屬維京群島", "汶萊", "保加利亞", "布吉納法索", "布隆迪", "柬埔寨", "喀麥隆", "加拿大", "維德角", "開曼群島", "中非共和國", "查德", "智利", "中國", "哥倫比亞", "科摩羅", "剛果", "哥斯大黎加", "象牙海岸", "克羅埃西亞", "古巴", "賽普勒斯", "捷克共和國", "朝鮮", "剛果", "丹麥", "吉布地", "多明尼加", "多明尼加共和國", "東帝汶", "厄瓜多爾", "埃及", "薩爾瓦多", "赤道幾內亞", "厄立特里亞", "愛沙尼亞", "衣索比亞", "福克蘭群島", "法羅群島", "斐濟", "芬蘭", "法國", "法屬圭亞那", "法屬波利尼西亞", "加蓬", "甘比亞", "格魯吉亞", "德國", "迦納", "希臘", "格陵蘭", "瓜德羅普島", "瓜地馬拉", "根西島", "幾內亞", "幾內亞比索", "圭亞那", "海地", "赫德島和麥當勞群島", "宏都拉斯", "匈牙利", "冰島", "印度", "印尼", "伊朗", "伊拉克", "愛爾蘭", "以色列", "義大利", "牙買加", "約旦", "哈薩克", "肯亞", "吉里巴斯", "科威特", "吉爾吉斯斯坦", "老撾", "拉脫維亞", "黎巴嫩", "賴索托", "賴比瑞亞", "阿拉伯利比亞民眾國", "列支敦士登", "立陶宛", "盧森堡", "馬達加斯加", "馬拉威", "馬來西亞", "馬爾地夫", "馬里", "馬爾他", "馬提尼克島", "茅利塔尼亞", "馬約特", "墨西哥", "密克羅尼西亞", "莫爾達瓦共和國", "莫三比克", "緬甸", "納米比亞", "尼泊爾", "荷蘭", "荷屬安替列斯", "新赫里多尼亞", "紐西蘭", "尼加拉瓜", "尼日爾", "奈及利亞", "諾福克島", "北馬里安納群島", "挪威", "阿曼", "巴基斯坦", "帛琉", "巴拿馬", "巴布亞紐幾內亞", "巴拉圭", "秘魯", "菲律賓", "波蘭", "葡萄牙", "波多黎各", "卡達", "韓國", "羅馬尼亞", "俄羅斯", "盧旺達", "聖基茨和尼維斯", "聖露西亞", "聖皮爾和密克隆", "聖文森特和格林納丁斯群島", "薩摩亞", "聖馬利諾", "聖多美及普林西比島", "沙烏地阿拉伯", "塞內加爾", "獅子山", "斯洛伐克", "斯洛維尼亞", "所羅門群島", "索馬里", "普利托里亞", "西班牙", "蘇丹", "蘇利南", "史瓦濟蘭", "瑞典", "瑞士", "阿拉伯敘利亞共和國", "塔吉克斯坦", "泰國", "馬其頓", "多哥", "東加", "突尼斯", "土耳其", "土庫曼斯坦", "吐瓦魯", "烏干達", "烏克蘭", "阿聯酋", "英國", "坦尚尼亞", "美國", "美屬維爾京群島", "烏拉圭", "烏茲別克斯坦", "瓦努阿圖", "委內瑞拉", "越南", "南斯拉夫", "尚比亞", "辛巴威", "南非", "捷克", "摩洛哥", "塞爾維亞", "日本", "喬治亞", "厄瓜多", "摩爾多瓦", "突尼西亞", "利比亞", "吉爾吉斯", "烏茲別克", "南韓", "新加坡", "科索沃", "蒙特內哥羅", "斯里蘭卡", "澳洲", "剛果民主共和國", "敘利亞", "加彭", "史瓦帝尼", "盧安達", "馬利", "千里達及托巴哥", "蓋亞那", "索馬利亞", "南蘇丹", "尼日", "列支敦斯登", "葉門", "厄利垂亞", "蒙古", "聖多美普林西比", "摩納哥", "蒲隆地", "模里西斯", "塞席爾", "格瑞那達", "聖文森及格瑞那丁", "多米尼克", "寮國", "聖克里斯多福及尼維斯", "梵蒂岡", "西撒哈拉"
]
var totallongitude = [
    121.30, 69.11, 19.49, 3.08, -170.43, 1.32, 13.15, -61.48, -60.00, 44.31, -70.02, 149.08, 16.22, 49.56, -77.20, 50.30, 90.26, -59.30, 27.30, 4.21, -88.30, 2.42, 89.45, -68.10, 18.26, 25.57, -47.55, -64.37, 115.00, 23.20, -1.30, 29.18, 104.55, 11.35, -75.42, -23.34, -81.24, 18.35, 14.59, -70.40, 116.20, -74.00, 43.16, 15.12, -84.02, -5.17, 15.58, -82.22, 33.25, 14.22, 125.30, 15.15, 12.34, 42.20, -61.24, -69.59, 125.34, -78.35, 31.14, -89.10, 8.50, 38.55, 24.48, 38.42, -59.51, -6.56, 178.30, 25.03, 2.20, -52.18, -149.34, 9.26, -16.40, 44.50, 13.25, -0.06, 23.46, -51.35, -61.44, -90.22, -2.33, -13.49, -15.45, -58.12, -72.20, 74.00, -87.14, 19.05, -21.57, 77.13, 106.49, 51.30, 44.30, -6.15, 35.12, 12.29, -76.50, 35.52, 71.30, 36.48, 173.00, 48.00, 74.46, 102.36, 24.08, 35.31, 27.30, -10.47, 13.07, 9.31, 25.19, 6.09, 47.31, 33.48, 101.41, 73.28, -7.55, 14.31, -61.02, 57.30, 45.14, -99.10, 158.09, 28.50, 32.32, 96.20, 17.04, 85.20, 4.54, -69.00, 166.30, 174.46, -86.20, 2.06, 7.32, 168.43, 145.45, 10.45, 58.36, 73.10, 134.28, -79.25, 147.08, -57.30, -77.00, 121.03, 21.00, -9.10, -66.07, 51.35, 126.58, 26.10, 37.35, 30.04, -62.43, -60.58, -56.12, -61.10, -171.50, 12.30, 6.39, 46.42, -17.29, -13.17, 17.07, 14.33, 159.57, 45.25, 28.12, -3.45, 32.35, -55.10, 31.06, 18.03, 7.28, 36.18, 68.48, 100.35, 21.26, 1.20, -174.00, 10.11, 32.54, 57.50, 179.13, 32.30, 30.28, 54.22, -0.05, 35.45, -77.02, -64.56, -56.11, 69.10, 168.18, -66.55, 105.55, 20.37, 28.16, 31.02, -31.16, 50.14, 31.9, 44.07, 36.44, 47.17, -1.38, 47.60, 34.13, 26.90, 41.41, 41.97, 36.60, 1.36, 42.62, 42.88, 7.63, -24.87, -2.92, 35.01, -0.64, -26.56, -2.02, 17.67, 10.73, 4.78, 2.86, 7.41, 17.5, 47.18, 15.88, 15.38, 46.87, 0.24, 43.73, -3.31, -20.24, -4.63, 12.11, 13.25, 15.43, 19.62, 17.24, 41.9, 24.59
]
var totallatitude = [
    25.03, 34.28, 41.18, 36.42, -14.16, 42.31, -8.50, 17.20, -36.30, 40.10, 12.32, -35.15, 48.12, 40.29, 25.05, 26.10, 23.43, 13.05, 53.52, 50.51, 17.18, 6.23, 27.31, -16.20, 43.52, -24.45, -15.47, 18.27, 4.52, 42.45, 12.15, -3.16, 11.33, 3.50, 45.27, 15.02, 19.20, 4.23, 12.10, -33.24, 39.55, 4.34, -11.40, -4.09, 9.55, 6.49, 45.50, 23.08, 35.10, 50.05, 39.09, -4.20, 55.41, 11.08, 15.20, 18.30, -8.29, -0.15, 30.01, 13.40, 3.45, 15.19, 59.22, 9.02, -51.40, 62.05, -18.06, 60.15, 48.50, 5.05, -17.32, 0.25, 13.28, 41.43, 52.30, 5.35, 37.58, 64.10, 16.00, 14.40, 49.26, 9.29, 11.45, 6.50, 18.40, -53.00, 14.05, 47.29, 64.10, 28.37, -6.09, 35.44, 33.20, 53.21, 31.47, 41.54, 18.00, 31.57, 51.10, -1.17, 1.30, 29.30, 42.54, 17.58, 56.53, 33.53, -29.18, 6.18, 32.49, 47.08, 54.38, 49.37, -18.55, -14.00, 3.09, 4.00, 12.34, 35.54, 14.36, -20.10, -12.48, 19.20, 6.55, 47.02, -25.58, 16.45, -22.35, 27.45, 52.23, 12.05, -22.17, -41.19, 12.06, 13.27, 9.05, -45.20, 15.12, 59.55, 23.37, 33.40, 7.20, 9.00, -9.24, -25.10, -12.00, 14.40, 52.13, 38.42, 18.28, 25.15, 37.31, 44.27, 55.45, -1.59, 17.17, 14.02, 46.46, 13.10, -13.50, 43.55, 0.10, 24.41, 14.34, 8.30, 48.10, 46.04, -9.27, 2.02, -25.44, 40.25, 15.31, 5.50, -26.18, 59.20, 46.57, 33.30, 38.33, 13.45, 42.01, 6.09, -21.10, 36.50, 39.57, 38.00, -8.31, 0.20, 50.30, 24.28, 51.36, -6.08, 39.91, 18.21, -34.50, 41.20, -17.45, 10.30, 21.05, 44.50, -15.28, -17.43, 24.16, 14.42, -6.26, 20.92, 138.48, 43.45, -78.33, 28.28, 9.43, 17.21, 74.58, 63.64, 127.80, 103.87, 20.86, 19.24, 80.78, 133.77, 23.78, 38.38, 11.81, 31.46, 29.92, -1.77, -61.01, -58.82, 45.1, 29.93, 9.43, 9.57, 47.67, 38.59, 102.55, 6.62, 7.42, 29.94, 57.37, 55.55, -61.62, -61.2, -61.33, 102.62, -62.73, 12.45, -13
]
var countryID = ["AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AR", "AT", "AU", "AZ", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BW", "BY", "BZ", "CA", "CF", "CG", "CH", "CK", "CL", "CM", "CN", "CO", "CR", "CS", "CU", "CY", "CZ", "DE", "DJ", "DK", "DO", "DZ", "EC", "EE", "EG", "ES", "ET", "FI", "FJ", "FR", "GA", "GB", "GD", "GE", "GF", "GH", "GI", "GM", "GN", "GR", "GT", "GU", "GY", "HK", "HN", "HT", "HU", "ID", "IE", "IL", "IN", "IQ", "IR", "IS", "IT", "JM", "JO", "JP", "KE", "KG", "KH", "KP", "KR", "KT", "KW", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "MA", "MC", "MD", "MG", "ML", "MM", "MN", "MO", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "NA", "NE", "NG", "NI", "NL", "NO", "NP", "NR", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PR", "PT", "PY", "QA", "RO", "RU", "SA", "SB", "SC", "SD", "SE", "SG", "SI", "SK", "SL", "SM", "SN", "SO", "SR", "ST", "SV", "SY", "SZ", "TD", "TG", "TH", "TJ", "TM", "TN", "TO", "TR", "TT", "TW", "TZ", "UA", "UG", "US", "UY", "UZ", "VC", "VE", "VN", "YE", "YU", "ZA", "ZM", "ZR", "ZW"]
var countryName = ["安道爾", "阿拉伯聯合大公國", "阿富汗", "安提瓜和巴布達", "安圭拉島", "阿爾巴尼亞", "亞美尼亞", "安哥拉", "阿根廷", "奧地利", "澳大利亞", "亞塞拜然", "巴貝多", "孟加拉", "比利時", "布吉納法索", "保加利亞", "巴林", "布隆迪", "貝南", "巴勒斯坦", "百慕大群島", "汶萊", "玻利維亞", "巴西", "巴哈馬", "波札那", "白俄羅斯", "貝里斯", "加拿大", "中非共和國", "剛果民主共和國", "瑞士", "科克群島", "智利", "喀麥隆", "中國", "哥倫比亞", "哥斯大黎加", "捷克", "古巴", "賽普勒斯", "捷克", "德國", "吉布地", "丹麥", "多明尼加共和國", "阿爾及利亞", "厄瓜多", "愛沙尼亞", "埃及", "西班牙", "衣索比亞", "芬蘭", "斐濟", "法國", "加蓬", "英國", "格瑞那達", "格魯吉亞", "法屬圭亞那", "迦納", "直布羅陀", "甘比亞", "幾內亞", "希臘", "瓜地馬拉", "關島", "圭亞那", "香港特別行政區", "宏都拉斯", "海地", "匈牙利", "印尼", "愛爾蘭", "以色列", "印度", "伊拉克", "伊朗", "冰島", "義大利", "牙買加", "約旦", "日本", "肯亞", "吉爾吉斯", "柬埔寨", "朝鮮", "南韓", "象牙海岸共和國", "科威特", "哈薩克", "老撾", "黎巴嫩", "聖露西亞", "列支敦士登", "斯里蘭卡", "賴比瑞亞", "賴索托", "立陶宛", "盧森堡", "拉脫維亞", "利比亞", "摩洛哥", "摩納哥", "莫爾達瓦", "馬達加斯加", "馬里", "緬甸", "蒙古", "澳門", "蒙瑟拉特島島", "馬爾他", "模里西斯", "馬爾地夫", "馬拉威", "墨西哥", "馬來西亞", "莫三比克", "納米比亞", "尼日", "奈及利亞", "尼加拉瓜", "荷蘭", "挪威", "尼泊爾", "諾魯", "紐西蘭", "阿曼", "巴拿馬", "秘魯", "法屬玻利尼西亞", "巴布亞紐幾內亞", "菲律賓", "巴基斯坦", "波蘭", "波多黎各", "葡萄牙", "巴拉圭", "卡達", "羅馬尼亞", "俄羅斯", "沙烏地阿拉伯", "所羅門群島", "塞席爾", "南蘇丹", "瑞典", "新加坡", "斯洛維尼亞", "斯洛伐克", "獅子山", "聖馬利諾", "塞內加爾", "索馬利亞", "蘇利南", "聖多美普林西比", "薩爾瓦多", "敘利亞", "史瓦帝尼", "查德", "多哥", "泰國", "塔吉克斯坦", "土庫曼斯坦", "突尼西亞", "東加", "土耳其", "千里達及托巴哥", "台灣", "坦尚尼亞", "烏克蘭", "烏干達", "美國", "烏拉圭", "烏茲別克", "聖文森及格瑞那丁", "委內瑞拉", "越南", "葉門", "南斯拉夫", "南非", "尚比亞", "薩伊", "辛巴威"]
var request = require("request");
var cheerio = require("cheerio");
var nodemailer = require('nodemailer');
const fs = require("fs");
// 這個不需要安裝直接引用即可，用來把資料寫入 JSON檔案
var take = function () {
    request({
        // 爬蟲要爬的網站
        url: "https://news.campaign.yahoo.com.tw/2019-nCoV/index.php",
        method: "GET"
    }, function (error, response, body) {
        if (error || !body) {
            // 如果沒爬到就不做事
            return;
        } else {
            // 寫你要做的事情            
            const $ = cheerio.load(body); // 抓到 body
            const result = []; // 建立一個儲存結果的容器
            const tr = $("tbody tr"); // 爬每一行的 tr
            for (var i = 0; i < tr.length; i++) {
                const total = tr.eq(i).find('td');
                const area = total.eq(1).text();
                const value = Number((total.eq(2).text()).replace(",", "").replace(",", "")) / 10000;
                const die = total.eq(3).text();
                if (countryName.indexOf(area) != -1) {
                    var name = area + "(" + countryID[countryName.indexOf(area)] + ")";
                    var id = countryID[countryName.indexOf(area)];
                    var longitude = totallongitude[totalcountry.indexOf(area)];
                    var latitude = totallatitude[totalcountry.indexOf(area)];
                    result.push(Object.assign({ name, id, value, die, longitude, latitude }))
                }
            }
            console.log(result);
            fs.writeFileSync("result.json", JSON.stringify(result));
        }
    })
}
take();
setInterval(take, 5 / 60 * 60 * 1000);